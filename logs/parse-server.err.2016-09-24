{"error":{"code":200,"message":"bad or missing username"},"level":"error","message":"Error generating response. ParseError { code: 200, message: 'bad or missing username' }","timestamp":"2016-09-24T01:21:29.989Z"}
{"error":{"code":202,"message":"Account already exists for this username."},"level":"error","message":"Error generating response. ParseError {\n  code: 202,\n  message: 'Account already exists for this username.' }","timestamp":"2016-09-24T01:21:54.466Z"}
{"error":{"code":202,"message":"Account already exists for this username."},"level":"error","message":"Error generating response. ParseError {\n  code: 202,\n  message: 'Account already exists for this username.' }","timestamp":"2016-09-24T01:22:07.352Z"}
{"error":{"code":202,"message":"Account already exists for this username."},"level":"error","message":"Error generating response. ParseError {\n  code: 202,\n  message: 'Account already exists for this username.' }","timestamp":"2016-09-24T01:26:24.086Z"}
{"error":{"code":202,"message":"Account already exists for this username."},"level":"error","message":"Error generating response. ParseError {\n  code: 202,\n  message: 'Account already exists for this username.' }","timestamp":"2016-09-24T01:26:56.364Z"}
{"error":{"code":200,"message":"username is required."},"level":"error","message":"Error handling request: ParseError { code: 200, message: 'username is required.' }","timestamp":"2016-09-24T01:28:40.298Z"}
{"error":{"code":200,"message":"username is required."},"level":"error","message":"Error handling request: ParseError { code: 200, message: 'username is required.' }","timestamp":"2016-09-24T01:37:23.529Z"}
{"error":{"code":200,"message":"username is required."},"level":"error","message":"Error handling request: ParseError { code: 200, message: 'username is required.' }","timestamp":"2016-09-24T01:48:47.404Z"}
{"error":{"code":200,"message":"username is required."},"level":"error","message":"Error handling request: ParseError { code: 200, message: 'username is required.' }","timestamp":"2016-09-24T01:48:49.511Z"}
{"error":{"code":200,"message":"username is required."},"level":"error","message":"Error handling request: ParseError { code: 200, message: 'username is required.' }","timestamp":"2016-09-24T02:03:21.940Z"}
{"error":{"code":200,"message":"username is required."},"level":"error","message":"Error handling request: ParseError { code: 200, message: 'username is required.' }","timestamp":"2016-09-24T02:03:23.214Z"}
{"error":{"code":200,"message":"username is required."},"level":"error","message":"Error handling request: ParseError { code: 200, message: 'username is required.' }","timestamp":"2016-09-24T02:08:26.179Z"}
{"error":{"code":101,"message":"Invalid username/password."},"level":"error","message":"Error generating response. ParseError { code: 101, message: 'Invalid username/password.' }","timestamp":"2016-09-24T13:47:50.901Z"}
{"error":{"code":101,"message":"Invalid username/password."},"level":"error","message":"Error generating response. ParseError { code: 101, message: 'Invalid username/password.' }","timestamp":"2016-09-24T13:48:37.136Z"}
{"error":{"code":202,"message":"Account already exists for this username."},"level":"error","message":"Error generating response. ParseError {\n  code: 202,\n  message: 'Account already exists for this username.' }","timestamp":"2016-09-24T13:59:03.331Z"}
{"error":{},"level":"error","message":"Error generating response. TypeError: Cannot read property 'consumer_key' of undefined\n    at new OAuth (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\authDataManager\\OAuth1Client.js:7:30)\n    at validateAuthData (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\authDataManager\\twitter.js:11:16)\n    at C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\authDataManager\\index.js:96:14\n    at C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:268:12\n    at Array.map (native)\n    at RestWrite.handleAuthDataValidation (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:260:43)\n    at RestWrite.handleAuthData (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:300:15)\n    at RestWrite.validateAuthData (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:251:19)\n    at C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:89:18\n    at run (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\babel-polyfill\\node_modules\\core-js\\modules\\es6.promise.js:87:22)","timestamp":"2016-09-24T13:59:29.477Z"}
{"level":"error","message":"Uncaught internal server error. TypeError: Cannot read property 'consumer_key' of undefined\n    at new OAuth (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\authDataManager\\OAuth1Client.js:7:30)\n    at validateAuthData (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\authDataManager\\twitter.js:11:16)\n    at C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\authDataManager\\index.js:96:14\n    at C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:268:12\n    at Array.map (native)\n    at RestWrite.handleAuthDataValidation (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:260:43)\n    at RestWrite.handleAuthData (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:300:15)\n    at RestWrite.validateAuthData (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:251:19)\n    at C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:89:18\n    at run (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\babel-polyfill\\node_modules\\core-js\\modules\\es6.promise.js:87:22) TypeError: Cannot read property 'consumer_key' of undefined\n    at new OAuth (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\authDataManager\\OAuth1Client.js:7:30)\n    at validateAuthData (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\authDataManager\\twitter.js:11:16)\n    at C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\authDataManager\\index.js:96:14\n    at C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:268:12\n    at Array.map (native)\n    at RestWrite.handleAuthDataValidation (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:260:43)\n    at RestWrite.handleAuthData (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:300:15)\n    at RestWrite.validateAuthData (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:251:19)\n    at C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\parse-server\\lib\\RestWrite.js:89:18\n    at run (C:\\Users\\ahmedengu\\p\\parse-server-example\\node_modules\\babel-polyfill\\node_modules\\core-js\\modules\\es6.promise.js:87:22)","timestamp":"2016-09-24T13:59:29.478Z"}
{"error":{"code":101,"message":"Facebook auth is invalid for this user."},"level":"error","message":"Error generating response. ParseError {\n  code: 101,\n  message: 'Facebook auth is invalid for this user.' }","timestamp":"2016-09-24T13:59:56.852Z"}
{"error":{"code":202,"message":"Account already exists for this username."},"level":"error","message":"Error generating response. ParseError {\n  code: 202,\n  message: 'Account already exists for this username.' }","timestamp":"2016-09-24T19:57:13.399Z"}
{"error":{"code":125,"message":"Email address format is invalid."},"level":"error","message":"Error generating response. ParseError { code: 125, message: 'Email address format is invalid.' }","timestamp":"2016-09-24T20:05:07.226Z"}
{"error":{"code":125,"message":"Email address format is invalid."},"level":"error","message":"Error generating response. ParseError { code: 125, message: 'Email address format is invalid.' }","timestamp":"2016-09-24T22:34:53.123Z"}
{"error":{"code":255,"message":"Class Groups is not empty, contains 1 objects, cannot drop schema."},"level":"error","message":"Error generating response. ParseError {\n  code: 255,\n  message: 'Class Groups is not empty, contains 1 objects, cannot drop schema.' }","timestamp":"2016-09-24T22:39:23.264Z"}
{"error":{"code":101,"message":"Invalid username/password."},"level":"error","message":"Error generating response. ParseError { code: 101, message: 'Invalid username/password.' }","timestamp":"2016-09-24T22:40:02.823Z"}
{"error":{"code":101,"message":"Invalid username/password."},"level":"error","message":"Error generating response. ParseError { code: 101, message: 'Invalid username/password.' }","timestamp":"2016-09-24T22:40:17.712Z"}
{"error":{"code":101,"message":"Invalid username/password."},"level":"error","message":"Error generating response. ParseError { code: 101, message: 'Invalid username/password.' }","timestamp":"2016-09-24T22:40:20.395Z"}
{"error":{"code":101,"message":"Invalid username/password."},"level":"error","message":"Error generating response. ParseError { code: 101, message: 'Invalid username/password.' }","timestamp":"2016-09-24T22:40:26.144Z"}
{"error":{"code":101,"message":"Invalid username/password."},"level":"error","message":"Error generating response. ParseError { code: 101, message: 'Invalid username/password.' }","timestamp":"2016-09-24T22:40:50.333Z"}
